module alu(
	input clk,
	input S[2:0],
	input en,
	input cin,
	input [3:0] KEY_R,
	output [3:0] KEY_C = 4'b0111,
	output [15:0] ans,
	output wire [31:0] N,
	output [7:0] codeout,
	output [2:0] sel
);
	wire [7:0] X,Y;
wire [15:0] key_out;
keymodule km(.clk(clk),.KEY_R(KEY_R),.clr(clr),.KEY_C(KEY_C),.out(key_out);
midware mw(key_out,X,Y);
assign N={X,Y,ans};
segment_displays sd(.clk(clk),.N(N),.seg(codeout),.sel(sel));

	initial
	begin
		ans<=8'b0000_0000;
	end
	always@(posedge clk)
	begin
		case(S)
			3'b000:put_zero(X,Y,ans);
			3'b001:logic_and(X,Y,ans);
			3'b010:logic_or(X,Y,ans);
			3'b011:logic_yihuo(X,Y,ans);
			3'b100:arith_add(X,Y,ans);
			3'b101:left1(X,Y,ans);
			3'b110:logic_right1(X,Y,ans);
			3'b111:arith_right1(X,Y,ans);
		endcase
	end
endmodule
